// image enhancement 
import numpy as np
import cv2 as cv
from matplotlib import pyplot as plt

#histogram equalization
img = cv.imread('rose.webp', cv.IMREAD_GRAYSCALE)
assert img is not None, "file could not be read, check with os.path.exists()"
plt.hist(img.ravel(), 256, [0, 256]);
plt.show()

//smoothing
img = cv.imread('opencv.png')
assert img is not None, "file could not be read, check with os.path.exists()"

kernel = np.ones((5, 5), np.float32) / 25
dst = cv.filter2D(img, -1, kernel)

blur = cv.blur(img,(5,5))

plt.subplot(121), plt.imshow(img), plt.title('Original')
plt.xticks([]), plt.yticks([])
plt.subplot(122), plt.imshow(dst), plt.title('Averaging')
plt.xticks([]), plt.yticks([])
plt.show()

//contours with area
import numpy as np
import cv2 as cv
import sys

img = cv.imread('star.jpg')

if img is None:
    sys.exit("Could not read the image.")

cv.imshow("Display window", img)
k = cv.waitKey(0)

if k == ord("s"):
    cv.imwrite("starry_night.png", img)
img = cv.imread('star.jpg', cv.IMREAD_GRAYSCALE)
assert img is not None, "file could not be read, check with os.path.exists()"
ret, thresh = cv.threshold(img, 127, 255, 0)
contours, hierarchy = cv.findContours(thresh, 1, 2)  

cnt = contours[0]
M = cv.moments(cnt)
area = cv.contourArea(cnt)

print(M)

//2D Histogram
import numpy as np
import cv2 as cv
from matplotlib import pyplot as plt

img = cv.imread('city.ong')
assert img is not None, "file could not be read, check with os.path.exists()"
hsv = cv.cvtColor(img, cv.COLOR_BGR2HSV)
hist = cv.calcHist([hsv], [0, 1], None, [180, 256], [0, 180, 0, 256])

plt.imshow(hist, interpolation='nearest')
plt.show()
